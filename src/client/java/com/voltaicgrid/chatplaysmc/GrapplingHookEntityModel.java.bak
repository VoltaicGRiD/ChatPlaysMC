package com.voltaicgrid.chatplaysmc;

import net.minecraft.client.model.*;
import net.minecraft.client.render.RenderLayer;
import net.minecraft.client.render.entity.model.EntityModel;
import net.minecraft.client.util.math.MatrixStack;
import net.minecraft.util.Identifier;
import java.util.function.Function;

/**
 * Model for the grappling hook entity.
 * Currently a simple hook-like shape that can be expanded with more detail.
 */
public class GrapplingHookEntityModel extends EntityModel<GrapplingHookEntityRenderState> {
    private final ModelPart hook;
    private final ModelPart chain;

    public GrapplingHookEntityModel(ModelPart root, Function<Identifier, RenderLayer> layerFactory) {
        super(root, layerFactory);
        this.hook = root.getChild("hook");
        this.chain = root.getChild("chain");
    }

    public static TexturedModelData getTexturedModelData() {
        ModelData modelData = new ModelData();
        ModelPartData modelPartData = modelData.getRoot();

        // Create a simple hook shape
        modelPartData.addChild("hook", 
            ModelPartBuilder.create()
                .uv(0, 0).cuboid(-1.0F, -1.0F, -1.0F, 2.0F, 2.0F, 2.0F, new Dilation(0.0F))
                .uv(8, 0).cuboid(-0.5F, -1.0F, 1.0F, 1.0F, 1.0F, 2.0F, new Dilation(0.0F))
                .uv(8, 4).cuboid(-0.5F, -2.0F, 2.5F, 1.0F, 2.0F, 0.5F, new Dilation(0.0F)), 
            ModelTransform.of(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F));

        // Create a small chain link
        modelPartData.addChild("chain",
            ModelPartBuilder.create()
                .uv(0, 4).cuboid(-0.5F, -0.5F, -3.0F, 1.0F, 1.0F, 2.0F, new Dilation(0.0F)),
            ModelTransform.of(0.0F, 0.0F, 0.0F, 0.0F, 0.0F, 0.0F));

        return TexturedModelData.of(modelData, 16, 16);
    }

    @Override
    public void setAngles(GrapplingHookEntityRenderState renderState) {
        // Simple rotation animation based on age
        this.hook.yaw = renderState.age * 0.1F;
        
        // Chain can have a slight sway
        this.chain.pitch = (float) Math.sin(renderState.age * 0.2F) * 0.1F;
    }
}